export default async function handler(req, res) {
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  if (req.method === 'OPTIONS') return res.status(200).end();
  if (req.method !== 'POST') return res.status(405).json({ message: 'Method Not Allowed' });

  const { message } = req.body;
  const apiKey = process.env.GROQ_API_KEY;

  const response = await fetch('https://api.groq.com/openai/v1/chat/completions', {
    method: 'POST',
    headers: {
      'Authorization': `Bearer ${apiKey}`,
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      model: "llama3-8b-8192",
      messages: [
        {
          role: "system",
          content: `–¢—ã ‚Äî AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ —Ä–µ–º–æ–Ω—Ç—É —Å—Ç–∏—Ä–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω bmvash.ru.
–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, –≤–µ–∂–ª–∏–≤–æ, –ø–æ –¥–µ–ª—É, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º —Ç–æ–Ω–æ–º. –ù–∞–ø—Ä–∞–≤–ª—è–π –Ω–∞ –∑–∞—è–≤–∫—É, —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.

üìû –¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏: +7 (929) 959-05-53  
üìß –ü–æ—á—Ç–∞: bmvas538@gmail.com  
üìÜ –†–∞–±–æ—Ç–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 10:00 –¥–æ 22:00  
üìç –û–±—Å–ª—É–∂–∏–≤–∞–µ–º –≤—Å—é –ú–æ—Å–∫–≤—É –∏ –ú–û  
üìä –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–µ–º–æ–Ω—Ç–∞: https://bmvash.ru/calc-remont/  
üí¨ Telegram: https://t.me/bmvash  

üõ†Ô∏è –£—Å–ª—É–≥–∏ –∏ —Ü–µ–Ω—ã:
- –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: –æ—Ç 1500 —Ä—É–±  
- –ß–∏—Å—Ç–∫–∞: –æ—Ç 2000 —Ä—É–±  
- –†–µ–º–æ–Ω—Ç: –æ—Ç 2000 —Ä—É–±  
- –ó–∞–º–µ–Ω–∞ –∑–∞–ø—á–∞—Å—Ç–µ–π: –æ—Ç 2500 —Ä—É–±  

üí° –ú—ã ‚Äî –º–æ–ª–æ–¥–∞—è, –Ω–æ —É–≤–µ—Ä–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –£–∂–µ –±–æ–ª–µ–µ 100 –¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞.

–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –ø–æ —Ä–µ–º–æ–Ω—Ç—É ‚Äî —Å–∫–∞–∂–∏, —á—Ç–æ –º–æ–∂–µ—à—å —Ç–æ–ª—å–∫–æ –ø–æ —Ä–µ–º–æ–Ω—Ç—É –∏ –ø–æ–º–æ—á—å –ø–æ —Å—Å—ã–ª–∫–µ –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω—É.`
        },
        { role: "user", content: message }
      ]
    })
  });

  const data = await response.json();
  const reply = data?.choices?.[0]?.message?.content || "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.";

  res.status(200).json({ reply });
}
